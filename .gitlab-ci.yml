variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    PYPI_SERVER: $PYPI_SERVER # address of the local PyPi Server

    GITLAB_CI_USER_EMAIL: $GITLAB_CI_USER_EMAIL # mail address of the GitLab CI user
    GITLAB_CI_USER_NAME: $GITLAB_CI_USER_NAME # name of the GitLab CI user

    CI_GITLAB_ADDRESS: $CI_GITLAB_ADDRESS # name of the GitLab CI user
    CI_RUNNER_TAG_COMMON: 'icps'
    CI_REPO_TOKEN_NAME: $CI_REPO_TOKEN_NAME
    CI_REPO_TOKEN_VALUE: $CI_REPO_TOKEN_VALUE
    CI_PRIVATE_TOKEN: $CI_REPO_ACCESS_TOKEN
    POETRY_VERSION: 1.8.3
    PYTHON_VERSION: 38
    CODE_SRC_DIR: src

# DEFAULT RUNNER CONFIGURATIONS
default:
  tags:
    - $CI_RUNNER_TAG_COMMON # Set in repository environment variables
  image: python:3.8 # Image to use for the runners should be in line with the main application environment

include:
  - project: 'iosb/kis/icps/misc/icps-ci-cd'
    ref: main
    file:
      - '/template-ci.yml'
      - '/templates/dev_env.yml' #REQUIRED - Checks poetry dev environment#
      - '/templates/tests.yml' # pytest,linting and typing checks | tox specs: py*,type,lint
      - '/templates/extended_tests.yml' # security and other tests | tox specs: docstring-examples,notebooks,bandit,radon
      - '/templates/documentation.yml'
      - '/templates/release.yml'
      - '/templates/publish.yml'

.poetry-setup: &poetry-setup
    - curl -sSL https://install.python-poetry.org | POETRY_VERSION=$POETRY_VERSION POETRY_HOME=/opt/poetry python3 -
    - export PATH="/opt/poetry/bin:$PATH"
    - poetry config http-basic.autolern-pypi $CI_REPO_TOKEN_NAME $CI_REPO_TOKEN_VALUE
    - poetry --version
    - poetry config --local virtualenvs.in-project true
    - poetry run python -V  # Print out python version for debugging


publish_pypi:
  cache:
    key: ${CI_COMMIT_REF_SLUG}   # Reuse the cached .venv directory
    paths:
      - .venv/     # Make sure the test stage depends on the install stage
  tags:
    - $CI_RUNNER_TAG_COMMON
  stage: publish
  before_script:
    # - apk --no-cache add linux-headers g++
    # - apk --no-cache add git curl gcc musl-dev python3-dev libffi-dev openssl-dev cargo
    - apt-get update
    - apt-get -y install git
    - git config --global user.email $GITLAB_CI_USER_EMAIL
    - git config --global user.name $GITLAB_CI_USER_NAME
    - *poetry-setup
    - poetry config repositories.pypi https://pypi.org/
    - poetry config pypi-token.pypi "${PYPI_TOKEN}"
    - poetry install --with ci
  script:
    - poetry build
    - poetry publish --repository pypi --skip-existing
  needs: ["bump_version","install-dependencies"]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
